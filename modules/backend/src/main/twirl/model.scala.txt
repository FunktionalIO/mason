@(project: mason.Project)
package @{project.packageName}

import io.github.iltotore.iron.*
import io.github.iltotore.iron.constraint.all.*

case class Greeting(message: Message, to: Name, hash: Hash)

private type MessageConstraint = Not[Blank] DescribedAs "A message must not be blank"
opaque type Message <: String = String :| MessageConstraint
object Message extends RefinedTypeOps[String, MessageConstraint, Message]

type NameConstraint = ForAll[Letter | Whitespace] DescribedAs "A name must not contains only letters or spaces"
opaque type Name <: String = String :| NameConstraint
object Name extends RefinedTypeOps[String, NameConstraint, Name]

type HashConstraint = Interval.Closed[0, 100] DescribedAs "A hash must be between 0 and 100"
opaque type Hash <: Int = Int :| HashConstraint
object Hash extends RefinedTypeOps[Int, HashConstraint, Hash]