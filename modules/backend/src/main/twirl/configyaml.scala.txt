@import mason.Module
@(project: mason.Project)
name: "@{project.name} - Generated by Mason"
log:
  level: info
  format: classic
  output:
    type: console
api:
  enabled: true
  http:
    host: 0.0.0.0
    port: 9876
    logging:
      enabled: true
      headers: true
      body: true
      level: debug
  open-api:
    enabled: true
    path-prefix: ["docs"]
    yaml-name: "@(project.name).yaml"
    context-path: []
    use-relative-paths: true
    show-extensions: false
admin:
  enabled: true
  http:
    host: 0.0.0.0
    port: 19876
    logging:
      enabled: true
      headers: true
      body: true
      level: debug
  open-api:
    enabled: true
    path-prefix: ["docs"]
    yaml-name: "@{project.name}.yaml"
    context-path: []
    use-relative-paths: true
    show-extensions: false
observability:
  enabled: true
  service-name: @{project.name}
  metrics:
    enabled: true
  traces:
    enabled: true
@if(project.hasModule(Module.DbSkunk)) {
db:
  host: localhost
  port: 5432
  database: "@{project.name}"
  username: "@{project.name}"
  password: "@{project.name}"
  pool-size: 10
  debug: false
  probe:
    timeout: PT5s
    interval: PT10s
    failure-count: 3
  logging:
    enabled: true
    level: info
    statements: true
    timing: true
}@if(project.hasModule(Module.DbDoobie)) {
db:
  driver-class-name: "org.postgresql.Driver"
  url: "jdbc:postgresql://localhost:5432/@{project.name}"
  username: "@{project.name}"
  password: "@{project.name}"
  system-schema: "public"
  app-schema: "public"
  poolsize: 32
  statement-cache:
    enabled: true
    size: 250
    sqlLimit: 2048
  debug: false
  probe:
    timeout: PT5s
    interval: PT10s
    failure-count: 3
}@if(project.hasModule(Module.DBMigration)) {
db-migration:
  url: "jdbc:postgresql://localhost:5432/@{project.name}"
  username: "@{project.name}"
  password: "@{project.name}"
  system-schema: "public"
  app-schema: "public"
  baseline-version: "0"
}@if(project.hasModule(Module.HttpClient)){
http-client:
  follow-redirect: true
  user-agent: pillars/@{project.name}
  logging:
    enabled: true
    headers: false
    body: true
    level: debug
}@if(project.hasModule(Module.FeatureFlags)){
feature-flags:
  enabled: true
  flags:
    - name: feature-1
      status: enabled
    - name: feature-2
      status: disabled
}
# Define your own configuration here
greeting: "Welcome to @{project.name}!"
